#+TITLE: Beeminder client for Emacs
#+AUTHOR: Marcin ‘mbork’ Borkowski
#+EMAIL: mbork@mbork.pl

A Beeminder client for Emacs.

* Intro
[[https://www.beeminder.com/][Beeminder]] is a self-motivation web service.  It is rather clever, and
I should not waste time trying to explain it here – go to their
website to learn more about it.

However, their default web interface sucks, and while the official
Android app is a lot better, it still has a few drawbacks.  The
biggest one is that it is not integrated with Emacs.  This Elisp
library fixes that problem (and a few others, like lack of goal
sorting and filtering).

This library is still under development, and everything (including
keybindings) may change.

* Setup
Put =beeminder.el= somewhere Emacs can load it and =(require
'beeminder)=.  Try =M-x customize-group RET Beeminder RET=.  Two
things you /have/ to set up are: your Beeminder username
(=beeminder-username=) and /authorization token/
(=beeminder-auth-token= – sign in and head to
https://www.beeminder.com/api/v1/auth_token.json to retrieve it.)  The
option =beeminder-goal-pp-format= is responsible for how each goal is
displayed; customize it to change the look of the list.

* Usage
The entry point is =M-x beeminder-list-goals=.  After a while, you
should see your goals.  Press =h= to see what’s available.  Reload
your goals with =g=.  Quit with =q=.  Most commands are
self-explanatory (and if not, their docstrings explain what they do).
Note: the dates are calculated with the assumption that hours after
midnight, but before 6:00am, still belong to today!  See the option
=beeminder-when-the-day-ends= for how to change that.

* Sorting
Currently, you can sort goals according to their “losedate”
(derailment time) or “midnight” setting.

* Filtering
The main drawback of the official clients is that you can’t easily
hide goals which are of no interest for you at the moment.  With
Emacs, you can.

Curently, you can filter goals by derailment time (=NUMBER-OF-DAYS d=,
number of days defaults to 3) or by how much percent of daily rate you
did today (=PERCENTAGE t=, defaults to 100).  What “today” means is
governed by options =beeminder-when-the-day-ends= (which see) and
=beeminder-use-goal-midnight-today-values= (which see).  TL;DR: with
the default setting, “today” is the stretch of time between 6:00am and
5:59am the next day.  With these options, you can change that hour
/or/ make the notion of “today” depend on the goal’s “midnight”
setting.

You can also “kill” inividual goals, i.e., make them invisible, with
=C-k=.  You can “unkill” all killed goals with =C-y=, or show which
goals are killed with =C-u C-y=.

You can disable all filters with =c=.  Alternatively, you can disable
a particular filter with =- KEY= (that is, minus sign and the key
which enables that goal).

* Submitting datapoints
Move the point to a goal and press =RET= to submit a datapoint.  If
you give a prefix argument, this will be the amount; if not, you will
be asked for it (default is 1).  Prefix argument =-= (a minus sign)
submits the datapoint with yesterday’s date.  Prefix argument =C-u=
asks for a date.  (Having Org-mode loaded works better, since then
=org-read-date= is used.)  After submitting, the goal is /dirty/,
i.e., there is a discrepancy between its state on the server and in
the client.  Dirty goals are shown in italic and gray.  Refresh the
goal list (by pressing =g=) to “clean” them (it might require from
a few seconds to a few minutes to work, probably because of
Beeminder’s server overload).

* Planned features
- Better error handling (currently it is almost non-existent)
- Org-mode integration
- More sorting/filtering options (per request)
- Showing/editing previous datapoints

* Bug reports/feature requests
Feel free to send bug reports and/or feature requests to me.
